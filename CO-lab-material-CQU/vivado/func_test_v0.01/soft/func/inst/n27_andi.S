#include <asm.h>
#include <regdef.h>
#include <inst_test.h>

LEAF(n27_andi_test)
    .set noreorder
    addiu s0, s0 ,1
    li  s2, 0x00
###test inst
    TEST_ANDI(0x4c23cdd4, 0x00005e89, 0x00004c80)
    TEST_ANDI(0xa1286600, 0x000008aa, 0x00000000)
    TEST_ANDI(0xea42f8c0, 0x00008d3e, 0x00008800)
    TEST_ANDI(0xfbbea379, 0x00009654, 0x00008250)
    TEST_ANDI(0x701ff540, 0x0000601f, 0x00006000)
    TEST_ANDI(0x509b8bd4, 0x0000fd3c, 0x00008914)
    TEST_ANDI(0x7f92d195, 0x000007a0, 0x00000180)
    TEST_ANDI(0x2e273e78, 0x0000175e, 0x00001658)
    TEST_ANDI(0x866dcbc0, 0x0000c84c, 0x0000c840)
    TEST_ANDI(0xd0b35788, 0x00006224, 0x00004200)
    TEST_ANDI(0x05d143e2, 0x0000b37a, 0x00000362)
    TEST_ANDI(0x7287ec60, 0x00001e2e, 0x00000c20)
    TEST_ANDI(0x0eeab150, 0x0000c349, 0x00008140)
    TEST_ANDI(0x2a3a9780, 0x0000d980, 0x00009180)
    TEST_ANDI(0x8d2a7020, 0x000001a6, 0x00000020)
    TEST_ANDI(0xf21afb20, 0x00000470, 0x00000020)
    TEST_ANDI(0x09bc8058, 0x000062c8, 0x00000048)
    TEST_ANDI(0x941a5f1d, 0x0000a21c, 0x0000021c)
    TEST_ANDI(0x5d2ce596, 0x00006941, 0x00006100)
    TEST_ANDI(0x237ee620, 0x0000f505, 0x0000e400)
    TEST_ANDI(0xa82b38f0, 0x0000ab7a, 0x00002870)
    TEST_ANDI(0x11bdcf7c, 0x00008908, 0x00008908)
    TEST_ANDI(0x69f14ac2, 0x00002a6d, 0x00000a40)
    TEST_ANDI(0xdd27baac, 0x0000b320, 0x0000b220)
    TEST_ANDI(0xe39e9284, 0x00002176, 0x00000004)
    TEST_ANDI(0xec254b7a, 0x00008804, 0x00000800)
    TEST_ANDI(0x3e31b970, 0x0000408e, 0x00000000)
    TEST_ANDI(0x1e923138, 0x0000636d, 0x00002128)
    TEST_ANDI(0x1853113b, 0x0000c1d6, 0x00000112)
    TEST_ANDI(0x38ec0c00, 0x0000f89b, 0x00000800)
    TEST_ANDI(0x90dfc0f4, 0x0000e980, 0x0000c080)
    TEST_ANDI(0xdcb88a10, 0x0000d9dc, 0x00008810)
    TEST_ANDI(0x9c178075, 0x000002ff, 0x00000075)
    TEST_ANDI(0x703def20, 0x00002201, 0x00002200)
    TEST_ANDI(0x525f1bc4, 0x0000ff42, 0x00001b40)
    TEST_ANDI(0x40e45ee8, 0x0000387d, 0x00001868)
    TEST_ANDI(0xfd12c8b8, 0x00003e3d, 0x00000838)
    TEST_ANDI(0x8dd34660, 0x0000e6b9, 0x00004620)
    TEST_ANDI(0x2d899331, 0x000002c0, 0x00000200)
    TEST_ANDI(0xc380bae0, 0x00001ccf, 0x000018c0)
    TEST_ANDI(0x6901f8aa, 0x0000d7be, 0x0000d0aa)
    TEST_ANDI(0x195e5c70, 0x0000d28c, 0x00005000)
    TEST_ANDI(0x045d0d20, 0x0000197d, 0x00000920)
    TEST_ANDI(0x58523014, 0x00006d72, 0x00002010)
    TEST_ANDI(0x4593277c, 0x00000000, 0x00000000)
    TEST_ANDI(0x49b1cc7b, 0x00000000, 0x00000000)
    TEST_ANDI(0xf03f7e70, 0x00000000, 0x00000000)
    TEST_ANDI(0x43eae8f0, 0x00000000, 0x00000000)
    TEST_ANDI(0xc5a82940, 0x00000000, 0x00000000)
    TEST_ANDI(0xac1f35a0, 0x00000000, 0x00000000)
    TEST_ANDI(0xac1b0623, 0x00000000, 0x00000000)
    TEST_ANDI(0x3abb76c0, 0x00000000, 0x00000000)
    TEST_ANDI(0xcf6bd3fc, 0x00000000, 0x00000000)
    TEST_ANDI(0x3b7f71f3, 0x00000000, 0x00000000)
    TEST_ANDI(0x9fef1a7c, 0x00000000, 0x00000000)
    TEST_ANDI(0xb1980f60, 0x00000000, 0x00000000)
    TEST_ANDI(0x135f3ae8, 0x00000000, 0x00000000)
    TEST_ANDI(0x1638ddf6, 0x00000000, 0x00000000)
    TEST_ANDI(0x426d3664, 0x00000000, 0x00000000)
    TEST_ANDI(0xa164a7a3, 0x00000000, 0x00000000)
    TEST_ANDI(0xaf159c7a, 0x00000000, 0x00000000)
    TEST_ANDI(0x68950560, 0x00000000, 0x00000000)
    TEST_ANDI(0x840cef68, 0x00000000, 0x00000000)
    TEST_ANDI(0x65a72314, 0x00000000, 0x00000000)
    TEST_ANDI(0x4372c5c0, 0x00000000, 0x00000000)
    TEST_ANDI(0x80f3a836, 0x00000000, 0x00000000)
    TEST_ANDI(0xc61777fc, 0x00000000, 0x00000000)
    TEST_ANDI(0xde35ed25, 0x00000000, 0x00000000)
    TEST_ANDI(0x00f0ac7a, 0x00000000, 0x00000000)
    TEST_ANDI(0xcfc9a7a8, 0x00000000, 0x00000000)
    TEST_ANDI(0xf34f9e20, 0x00000000, 0x00000000)
    TEST_ANDI(0x1914123c, 0x00000000, 0x00000000)
    TEST_ANDI(0xdaaae9aa, 0x00000000, 0x00000000)
    TEST_ANDI(0x00000000, 0x0000f73c, 0x00000000)
    TEST_ANDI(0x00000000, 0x0000c186, 0x00000000)
    TEST_ANDI(0x00000000, 0x00007b48, 0x00000000)
    TEST_ANDI(0x00000000, 0x0000d5e0, 0x00000000)
    TEST_ANDI(0x00000000, 0x00005495, 0x00000000)
    TEST_ANDI(0x00000000, 0x0000bafc, 0x00000000)
    TEST_ANDI(0x00000000, 0x0000b130, 0x00000000)
    TEST_ANDI(0x00000000, 0x00007965, 0x00000000)
    TEST_ANDI(0x00000000, 0x0000e238, 0x00000000)
    TEST_ANDI(0x00000000, 0x00009444, 0x00000000)
    TEST_ANDI(0x00000000, 0x00002fc4, 0x00000000)
    TEST_ANDI(0x00000000, 0x0000a378, 0x00000000)
    TEST_ANDI(0x00000000, 0x00001fa6, 0x00000000)
    TEST_ANDI(0x00000000, 0x00005b9e, 0x00000000)
    TEST_ANDI(0x00000000, 0x00009928, 0x00000000)
    TEST_ANDI(0x00000000, 0x000033a0, 0x00000000)
    TEST_ANDI(0x00000000, 0x00002f6d, 0x00000000)
    TEST_ANDI(0x00000000, 0x0000a348, 0x00000000)
    TEST_ANDI(0x00000000, 0x00006f00, 0x00000000)
    TEST_ANDI(0x00000000, 0x00000900, 0x00000000)
    TEST_ANDI(0x00000000, 0x0000fba0, 0x00000000)
    TEST_ANDI(0x00000000, 0x0000d560, 0x00000000)
    TEST_ANDI(0x00000000, 0x00001099, 0x00000000)
    TEST_ANDI(0x00000000, 0x00005f98, 0x00000000)
    TEST_ANDI(0x00000000, 0x0000fd24, 0x00000000)
    TEST_ANDI(0x00000000, 0x0000e294, 0x00000000)
    TEST_ANDI(0x00000000, 0x00007bc7, 0x00000000)
    TEST_ANDI(0x00000000, 0x0000546b, 0x00000000)
    TEST_ANDI(0x00000000, 0x00000000, 0x00000000)
###detect exception
    bne s2, zero, inst_error
    nop
###score ++
    addiu s3, s3, 1
###output (s0<<24)|s3
inst_error:  
    sll t1, s0, 24
    or t0, t1, s3 
    sw t0, 0(s1)
    jr ra
    nop
END(n27_andi_test)
