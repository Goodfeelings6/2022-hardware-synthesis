#include <asm.h>
#include <regdef.h>
#include <inst_test.h>

LEAF(n7_or_test)
    .set noreorder
    addiu s0, s0 ,1
    li  s2, 0x0
###test inst
    TEST_OR(0x859c2444, 0x21f961e9, 0xa5fd65ed)
    TEST_OR(0xd78e7bf6, 0x37b18310, 0xf7bffbf6)
    TEST_OR(0x971af4e0, 0x4c54addc, 0xdf5efdfc)
    TEST_OR(0xdd91b5e0, 0xc850e340, 0xddd1f7e0)
    TEST_OR(0x54ca8ab4, 0xdff4ba70, 0xdffebaf4)
    TEST_OR(0xe1f992d8, 0xa2a5d019, 0xe3fdd2d9)
    TEST_OR(0x9ff8eaa0, 0xe26cdc80, 0xfffcfea0)
    TEST_OR(0xa07d0c80, 0x9f37e678, 0xbf7feef8)
    TEST_OR(0xa7fa1a14, 0x82bbaa38, 0xa7fbba3c)
    TEST_OR(0x79fe68ac, 0xd836ebd6, 0xf9feebfe)
    TEST_OR(0x631f1200, 0xa9465f50, 0xeb5f5f50)
    TEST_OR(0x503ed3b0, 0xd4c3f80e, 0xd4fffbbe)
    TEST_OR(0x2f7d9231, 0x7dbf9bf8, 0x7fff9bf9)
    TEST_OR(0x85a85689, 0x9b3a3514, 0x9fba779d)
    TEST_OR(0x1fd31088, 0xdf8904d6, 0xdfdb14de)
    TEST_OR(0x49ea5256, 0x78004ec8, 0x79ea5ede)
    TEST_OR(0xa3db0a10, 0x5650db82, 0xf7dbdb92)
    TEST_OR(0x0ca86144, 0x3ffdb54c, 0x3ffdf54c)
    TEST_OR(0xb1c7731a, 0xfa49621c, 0xfbcf731e)
    TEST_OR(0xb3d88649, 0x960a282e, 0xb7daae6f)
    TEST_OR(0x57adbf94, 0x9a1acf40, 0xdfbfffd4)
    TEST_OR(0xf5fdf238, 0x7e7705f6, 0xfffff7fe)
    TEST_OR(0xd78fbe00, 0x7c55c280, 0xffdffe80)
    TEST_OR(0xec344c1e, 0xad81375e, 0xedb57f5e)
    TEST_OR(0x1df7ea7c, 0xbf4075ca, 0xbff7fffe)
    TEST_OR(0xb1b5cd64, 0xfee95920, 0xfffddd64)
    TEST_OR(0x310f83a0, 0xd96a5108, 0xf96fd3a8)
    TEST_OR(0x4b2fbef7, 0x5c429632, 0x5f6fbef7)
    TEST_OR(0xeaf745ca, 0x656049dc, 0xeff74dde)
    TEST_OR(0xbc1af088, 0x88ce928a, 0xbcdef28a)
    TEST_OR(0x56082ce0, 0x0f23c550, 0x5f2bedf0)
    TEST_OR(0xdba36c09, 0x45e9a498, 0xdfebec99)
    TEST_OR(0x3e9d9320, 0x6694bbb9, 0x7e9dbbb9)
    TEST_OR(0xb080abe7, 0x467043ce, 0xf6f0ebef)
    TEST_OR(0x7419beb0, 0x34acb0c0, 0x74bdbef0)
    TEST_OR(0x317635f8, 0x11935b4c, 0x31f77ffc)
    TEST_OR(0xf0525ca0, 0x52e85c2e, 0xf2fa5cae)
    TEST_OR(0xaa433600, 0x747f9a81, 0xfe7fbe81)
    TEST_OR(0xae067a50, 0xce058e6e, 0xee07fe7e)
    TEST_OR(0x75a70618, 0x0f18b00c, 0x7fbfb61c)
    TEST_OR(0x4f8da580, 0x5a966f8e, 0x5f9fef8e)
    TEST_OR(0xf8d6e5cc, 0x881c9970, 0xf8defdfc)
    TEST_OR(0xc7898fdc, 0xc94a4b30, 0xcfcbcffc)
    TEST_OR(0x8dbc2648, 0xa1bcc900, 0xadbcef48)
    TEST_OR(0x8e58fa10, 0xf9d74a50, 0xffdffa50)
    TEST_OR(0x2987a216, 0xa97a9500, 0xa9ffb716)
    TEST_OR(0xf7ce3e74, 0x8e1d4b80, 0xffdf7ff4)
    TEST_OR(0x0caa2a2c, 0xa47159e0, 0xacfb7bec)
    TEST_OR(0x54bbfd22, 0x6a96d77c, 0x7ebfff7e)
    TEST_OR(0x0fd04100, 0xfabdbef4, 0xfffdfff4)
    TEST_OR(0xb2ec2940, 0x02af6f40, 0xb2ef6f40)
    TEST_OR(0x064aea18, 0x75c77690, 0x77cffe98)
    TEST_OR(0xf64bb53a, 0x29e0e4bc, 0xffebf5be)
    TEST_OR(0x798cd730, 0xe1b27640, 0xf9bef770)
    TEST_OR(0xdc93f5a0, 0x9339734c, 0xdfbbf7ec)
    TEST_OR(0x4f6bfc88, 0x8661709a, 0xcf6bfc9a)
    TEST_OR(0xf5c6cf24, 0x9503cff8, 0xf5c7cffc)
    TEST_OR(0x74e8eb50, 0xa935c81a, 0xfdfdeb5a)
    TEST_OR(0x70359bfe, 0xdaab921c, 0xfabf9bfe)
    TEST_OR(0x51b575f8, 0x86e594f8, 0xd7f5f5f8)
    TEST_OR(0x9aff2c00, 0x9d61b0b8, 0x9fffbcb8)
    TEST_OR(0x6940a810, 0x90d5f27d, 0xf9d5fa7d)
    TEST_OR(0x7c964a84, 0x33a63a20, 0x7fb67aa4)
    TEST_OR(0x7ca8a820, 0x47a3f067, 0x7fabf867)
    TEST_OR(0x47e37c74, 0x3bae7420, 0x7fef7c74)
    TEST_OR(0x2ace0d52, 0x00000000, 0x2ace0d52)
    TEST_OR(0xc7d6b540, 0x00000000, 0xc7d6b540)
    TEST_OR(0x297a86a0, 0x00000000, 0x297a86a0)
    TEST_OR(0xbb35e180, 0x00000000, 0xbb35e180)
    TEST_OR(0x3cff98b0, 0x00000000, 0x3cff98b0)
    TEST_OR(0x0549cf7c, 0x00000000, 0x0549cf7c)
    TEST_OR(0xb9011280, 0x00000000, 0xb9011280)
    TEST_OR(0x02a823d8, 0x00000000, 0x02a823d8)
    TEST_OR(0xc21e3f78, 0x00000000, 0xc21e3f78)
    TEST_OR(0x649981c3, 0x00000000, 0x649981c3)
    TEST_OR(0x61298b3e, 0x00000000, 0x61298b3e)
    TEST_OR(0xf1bca7d5, 0x00000000, 0xf1bca7d5)
    TEST_OR(0x95ca82c2, 0x00000000, 0x95ca82c2)
    TEST_OR(0xe66d5ef8, 0x00000000, 0xe66d5ef8)
    TEST_OR(0x4ade53ec, 0x00000000, 0x4ade53ec)
    TEST_OR(0x76573eaa, 0x00000000, 0x76573eaa)
    TEST_OR(0xb1eb8732, 0x00000000, 0xb1eb8732)
    TEST_OR(0xe5fcea30, 0x00000000, 0xe5fcea30)
    TEST_OR(0x447680de, 0x00000000, 0x447680de)
    TEST_OR(0xb68a5d00, 0x00000000, 0xb68a5d00)
    TEST_OR(0x5594dab0, 0x00000000, 0x5594dab0)
    TEST_OR(0xb628f368, 0x00000000, 0xb628f368)
    TEST_OR(0x05a824c6, 0x00000000, 0x05a824c6)
    TEST_OR(0x5ecbe5d6, 0x00000000, 0x5ecbe5d6)
    TEST_OR(0x86ec793c, 0x00000000, 0x86ec793c)
    TEST_OR(0xc190a088, 0x00000000, 0xc190a088)
    TEST_OR(0x85a65990, 0x00000000, 0x85a65990)
    TEST_OR(0x8780e64f, 0x00000000, 0x8780e64f)
    TEST_OR(0x2a038100, 0x00000000, 0x2a038100)
    TEST_OR(0xebc41cb0, 0x00000000, 0xebc41cb0)
    TEST_OR(0x27e90bc3, 0x00000000, 0x27e90bc3)
    TEST_OR(0xcd10459c, 0x00000000, 0xcd10459c)
    TEST_OR(0xdf3ba4c0, 0x00000000, 0xdf3ba4c0)
    TEST_OR(0x3e259f78, 0x00000000, 0x3e259f78)
    TEST_OR(0x1c9dc120, 0x00000000, 0x1c9dc120)
    TEST_OR(0x9bf9a092, 0x00000000, 0x9bf9a092)
    TEST_OR(0x9ebb65e4, 0x00000000, 0x9ebb65e4)
    TEST_OR(0xf4da7282, 0x00000000, 0xf4da7282)
    TEST_OR(0xc5a9dcfc, 0x00000000, 0xc5a9dcfc)
    TEST_OR(0x26b438e8, 0x00000000, 0x26b438e8)
    TEST_OR(0x249df131, 0x00000000, 0x249df131)
    TEST_OR(0xc3025ef2, 0x00000000, 0xc3025ef2)
    TEST_OR(0xec12fb80, 0x00000000, 0xec12fb80)
    TEST_OR(0x3f1157c0, 0x00000000, 0x3f1157c0)
    TEST_OR(0x393bea60, 0x00000000, 0x393bea60)
    TEST_OR(0x0bbfd440, 0x00000000, 0x0bbfd440)
    TEST_OR(0xca64cbf4, 0x00000000, 0xca64cbf4)
    TEST_OR(0x3f9d07d8, 0x00000000, 0x3f9d07d8)
    TEST_OR(0xdc25bfc0, 0x00000000, 0xdc25bfc0)
    TEST_OR(0xe3cf2eac, 0x00000000, 0xe3cf2eac)
    TEST_OR(0x00000000, 0x9ba86780, 0x9ba86780)
    TEST_OR(0x00000000, 0x3b31cb30, 0x3b31cb30)
    TEST_OR(0x00000000, 0x0d072a80, 0x0d072a80)
    TEST_OR(0x00000000, 0xf561aaf4, 0xf561aaf4)
    TEST_OR(0x00000000, 0xd11246d0, 0xd11246d0)
    TEST_OR(0x00000000, 0xcd5a89a0, 0xcd5a89a0)
    TEST_OR(0x00000000, 0x040b7cd3, 0x040b7cd3)
    TEST_OR(0x00000000, 0xe6c3a3a0, 0xe6c3a3a0)
    TEST_OR(0x00000000, 0xa4cfec40, 0xa4cfec40)
    TEST_OR(0x00000000, 0x70b955fc, 0x70b955fc)
    TEST_OR(0x00000000, 0x9548afc8, 0x9548afc8)
    TEST_OR(0x00000000, 0x90f96c1c, 0x90f96c1c)
    TEST_OR(0x00000000, 0x141ba508, 0x141ba508)
    TEST_OR(0x00000000, 0xa31c7dd4, 0xa31c7dd4)
    TEST_OR(0x00000000, 0xdea31510, 0xdea31510)
    TEST_OR(0x00000000, 0x427bdff8, 0x427bdff8)
    TEST_OR(0x00000000, 0x55394930, 0x55394930)
    TEST_OR(0x00000000, 0xaf980b62, 0xaf980b62)
    TEST_OR(0x00000000, 0x7a395780, 0x7a395780)
    TEST_OR(0x00000000, 0x678fa33c, 0x678fa33c)
    TEST_OR(0x00000000, 0xe77088a8, 0xe77088a8)
    TEST_OR(0x00000000, 0xb19e3821, 0xb19e3821)
    TEST_OR(0x00000000, 0xdf101522, 0xdf101522)
    TEST_OR(0x00000000, 0x10f49ef0, 0x10f49ef0)
    TEST_OR(0x00000000, 0x7364415a, 0x7364415a)
    TEST_OR(0x00000000, 0xd5e67d80, 0xd5e67d80)
    TEST_OR(0x00000000, 0xaed22fda, 0xaed22fda)
    TEST_OR(0x00000000, 0xd24819fa, 0xd24819fa)
    TEST_OR(0x00000000, 0xba9502a7, 0xba9502a7)
    TEST_OR(0x00000000, 0xe87713b8, 0xe87713b8)
    TEST_OR(0x00000000, 0x027ed0e6, 0x027ed0e6)
    TEST_OR(0x00000000, 0xb9d53134, 0xb9d53134)
    TEST_OR(0x00000000, 0xc9c0776a, 0xc9c0776a)
    TEST_OR(0x00000000, 0x4cc82840, 0x4cc82840)
    TEST_OR(0x00000000, 0x5a596fc0, 0x5a596fc0)
    TEST_OR(0x00000000, 0xbe7a0130, 0xbe7a0130)
    TEST_OR(0x00000000, 0xfb871612, 0xfb871612)
    TEST_OR(0x00000000, 0xa88d5966, 0xa88d5966)
    TEST_OR(0x00000000, 0xe30d5408, 0xe30d5408)
    TEST_OR(0x00000000, 0x247bc054, 0x247bc054)
    TEST_OR(0x00000000, 0xbe492860, 0xbe492860)
    TEST_OR(0x00000000, 0x4e0fa84c, 0x4e0fa84c)
    TEST_OR(0x00000000, 0x2c3d0ff8, 0x2c3d0ff8)
    TEST_OR(0x00000000, 0x66327d80, 0x66327d80)
    TEST_OR(0x00000000, 0x9e5d96bb, 0x9e5d96bb)
    TEST_OR(0x00000000, 0xbb4301d1, 0xbb4301d1)
    TEST_OR(0x00000000, 0x8a126074, 0x8a126074)
    TEST_OR(0x00000000, 0x0734f91e, 0x0734f91e)
    TEST_OR(0x00000000, 0x8ad8c75c, 0x8ad8c75c)
    TEST_OR(0x00000000, 0xc82df286, 0xc82df286)
    TEST_OR(0x00000000, 0x00000000, 0x00000000)
###detect exception
    bne s2, zero, inst_error
    nop
###score ++
    addiu s3, s3, 1
###output (s0<<24)|s3
inst_error:  
    sll t1, s0, 24
    or t0, t1, s3 
    sw t0, 0(s1)
    jr ra
    nop
END(n7_or_test)
