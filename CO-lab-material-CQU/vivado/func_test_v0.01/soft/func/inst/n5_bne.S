#include <asm.h>
#include <regdef.h>
#include <inst_test.h>

LEAF(n5_bne_test)
    .set noreorder
    addiu s0, s0 ,1
    li  s2, 0x0
###test inst
    TEST_BNE(0xf7526ede, 0xf7526ede, 0x8e877120, 0xa8d995c0, 0x00000000, 0x00000000)
    TEST_BNE(0xc2d7c380, 0xc2d7c380, 0x7cc209cc, 0x5b33af05, 0x00000000, 0x00000000)
    TEST_BNE(0x4f888d40, 0x4f888d40, 0x2f31fb40, 0xa23cad23, 0x00000000, 0x00000000)
    TEST_BNE(0x7aff3880, 0x7aff3880, 0x075c5a20, 0x7dfe2100, 0x00000000, 0x00000000)
    TEST_BNE(0x1ccade40, 0x1ccade40, 0x79428800, 0x95ac9da4, 0x00000000, 0x00000000)
    TEST_BNE(0x1ae19e48, 0x1ae19e48, 0x2acf8dc0, 0xa2dd393b, 0x00000000, 0x00000000)
    TEST_BNE(0xb011c65a, 0xb011c65a, 0xd0f5f880, 0xd28d2030, 0x00000000, 0x00000000)
    TEST_BNE(0x9d821b80, 0x9d821b80, 0x290816b0, 0x0f958490, 0x00000000, 0x00000000)
    TEST_BNE(0x56a2a476, 0x56a2a476, 0x48d44a40, 0x47bc856c, 0x00000000, 0x00000000)
    TEST_BNE(0x60d4c3f8, 0x60d4c3f8, 0x3a3b4ca0, 0x078c4c63, 0x00000000, 0x00000000)
    TEST_BNE(0xcea57950, 0xcea57950, 0xe7f16407, 0x93941160, 0x00000000, 0x00000000)
    TEST_BNE(0x4bea7c0c, 0x4bea7c0c, 0xfb771004, 0x51415156, 0x00000000, 0x00000000)
    TEST_BNE(0x8d016c01, 0x8d016c01, 0xd27c1000, 0xeb2972e0, 0x00000000, 0x00000000)
    TEST_BNE(0x61b970a6, 0x61b970a6, 0x892b7a57, 0x7a38c5a0, 0x00000000, 0x00000000)
    TEST_BNE(0x35193060, 0x35193060, 0x2f769205, 0xbc57b538, 0x00000000, 0x00000000)
    TEST_BNE(0x4f4742b2, 0x4f4742b2, 0xc1fed10a, 0xa6df7480, 0x00000000, 0x00000000)
    TEST_BNE(0x34ff6015, 0x34ff6015, 0xa349c9d0, 0xee92b690, 0x00000000, 0x00000000)
    TEST_BNE(0xe30dc982, 0xe30dc982, 0x23626e88, 0xbc5d8560, 0x00000000, 0x00000000)
    TEST_BNE(0x02c3561e, 0x02c3561e, 0x8c06e6e0, 0x2b872fc0, 0x00000000, 0x00000000)
    TEST_BNE(0xed5510e4, 0xed5510e4, 0xfecdaf9e, 0xb8cffea3, 0x00000000, 0x00000000)
    TEST_BNE(0x66b9f9a3, 0x66b9f9a3, 0x91ad998b, 0x73257eb8, 0x00000000, 0x00000000)
    TEST_BNE(0x228a1f40, 0x228a1f40, 0x0cf1b018, 0x0cf025a4, 0x00000000, 0x00000000)
    TEST_BNE(0xbc2cc696, 0xbc2cc696, 0xfe38ac95, 0x507d2ca0, 0x00000000, 0x00000000)
    TEST_BNE(0xe04df6d0, 0xe04df6d0, 0x89bd1878, 0x039fd030, 0x00000000, 0x00000000)
    TEST_BNE(0xa642eba0, 0xa642eba0, 0xb1249e00, 0x9eaa76f4, 0x00000000, 0x00000000)
    TEST_BNE(0x9169d4e6, 0x00000000, 0x8de2a8f8, 0x4666ff30, 0x8de2a8f8, 0x4666ff30)
    TEST_BNE(0x8c727392, 0x00000000, 0xf914e5f0, 0xbfc02728, 0xf914e5f0, 0xbfc02728)
    TEST_BNE(0xb4e2d6c0, 0x00000000, 0xf0b7fb80, 0x34d439e0, 0xf0b7fb80, 0x34d439e0)
    TEST_BNE(0xc0d92060, 0x00000000, 0x3aa02880, 0x95161fc6, 0x3aa02880, 0x95161fc6)
    TEST_BNE(0xe5834417, 0x00000000, 0xf7f449fb, 0xbd54fd00, 0xf7f449fb, 0xbd54fd00)
    TEST_BNE(0xd557e6e4, 0x00000000, 0x7dbc8068, 0x4efada60, 0x7dbc8068, 0x4efada60)
    TEST_BNE(0xb437f388, 0x00000000, 0xac9fa100, 0x190187e8, 0xac9fa100, 0x190187e8)
    TEST_BNE(0xe822ca21, 0x00000000, 0xe0cbcfc0, 0x963582be, 0xe0cbcfc0, 0x963582be)
    TEST_BNE(0x3374510c, 0x00000000, 0x32a96121, 0x780cfcb0, 0x32a96121, 0x780cfcb0)
    TEST_BNE(0xa10f23f0, 0x00000000, 0xff9fd4d2, 0x36f3e0ee, 0xff9fd4d2, 0x36f3e0ee)
    TEST_BNE(0xdf18c280, 0x00000000, 0x429f8e70, 0x6cf8f7a0, 0x429f8e70, 0x6cf8f7a0)
    TEST_BNE(0xea92c588, 0x00000000, 0xbce51b0b, 0x8fcb2950, 0xbce51b0b, 0x8fcb2950)
    TEST_BNE(0x63488fb8, 0x00000000, 0x12e5b630, 0x30e67b92, 0x12e5b630, 0x30e67b92)
    TEST_BNE(0xf5554068, 0x00000000, 0x56e0aa24, 0xcb850982, 0x56e0aa24, 0xcb850982)
    TEST_BNE(0xa72f7240, 0x00000000, 0x52bccf3c, 0xe51f83fc, 0x52bccf3c, 0xe51f83fc)
    TEST_BNE(0xf9525442, 0x00000000, 0xcdbf5374, 0x1a146330, 0xcdbf5374, 0x1a146330)
    TEST_BNE(0x2aee70cc, 0x00000000, 0xec470e0a, 0x15339bc0, 0xec470e0a, 0x15339bc0)
    TEST_BNE(0xe7cf23cd, 0x00000000, 0x5f44aca5, 0x935cd3f4, 0x5f44aca5, 0x935cd3f4)
    TEST_BNE(0x00000000, 0x42355cf4, 0x2851d82c, 0x53c3a1e0, 0x2851d82c, 0x53c3a1e0)
    TEST_BNE(0x00000000, 0xab6636d5, 0x2a5b1ca0, 0x0c798620, 0x2a5b1ca0, 0x0c798620)
    TEST_BNE(0x00000000, 0x2526c610, 0xfd63b29c, 0xd3a22562, 0xfd63b29c, 0xd3a22562)
    TEST_BNE(0x00000000, 0xf64a1200, 0xc6899028, 0xedce3230, 0xc6899028, 0xedce3230)
    TEST_BNE(0x00000000, 0xd84b5b98, 0x549ab500, 0x16daa7f0, 0x549ab500, 0x16daa7f0)
    TEST_BNE(0x00000000, 0xaaeb992c, 0x154a0340, 0x339b44d6, 0x154a0340, 0x339b44d6)
    TEST_BNE(0x00000000, 0xa3523878, 0x740b3cb4, 0xd6342340, 0x740b3cb4, 0xd6342340)
    TEST_BNE(0x00000000, 0xf7015a40, 0x638e01f7, 0x30b6c750, 0x638e01f7, 0x30b6c750)
    TEST_BNE(0x00000000, 0x0eb00ec0, 0x0e543812, 0xa87b4680, 0x0e543812, 0xa87b4680)
    TEST_BNE(0x00000000, 0xf6838110, 0x56237fe8, 0x476513e2, 0x56237fe8, 0x476513e2)
    TEST_BNE(0x00000000, 0x1fb54c54, 0xf4510894, 0x90a81418, 0xf4510894, 0x90a81418)
    TEST_BNE(0x00000000, 0x5ae1c10a, 0xa55e3a99, 0xa457dfb0, 0xa55e3a99, 0xa457dfb0)
    TEST_BNE(0x00000000, 0xe39c65e3, 0x445b8590, 0x252bf044, 0x445b8590, 0x252bf044)
    TEST_BNE(0x00000000, 0x71cf2d6a, 0x3cf2a6f6, 0xe5050db0, 0x3cf2a6f6, 0xe5050db0)
    TEST_BNE(0x00000000, 0x1530a956, 0xdb56b7a8, 0x49b211f0, 0xdb56b7a8, 0x49b211f0)
    TEST_BNE(0x00000000, 0xe34317f6, 0x38abc364, 0xa774a135, 0x38abc364, 0xa774a135)
    TEST_BNE(0x00000000, 0x15c91782, 0xb27bd70c, 0xb672ede0, 0xb27bd70c, 0xb672ede0)
    TEST_BNE(0x00000000, 0x774ab6a0, 0xace06e98, 0xf6c13268, 0xace06e98, 0xf6c13268)
    TEST_BNE(0x00000000, 0x5dfc6230, 0x6ea36e38, 0x6d81b001, 0x6ea36e38, 0x6d81b001)
    TEST_BNE(0x00000000, 0x0edcb298, 0x931c23ac, 0xf917267c, 0x931c23ac, 0xf917267c)
    TEST_BNE(0x00000000, 0x00000000, 0x1744192c, 0x0b48f1f0, 0x00000000, 0x00000000)
###detect exception
    bne s2, zero, inst_error
    nop
###score ++
    addiu s3, s3, 1
###output (s0<<24)|s3
inst_error:  
    sll t1, s0, 24
    or t0, t1, s3 
    sw t0, 0(s1)
    jr ra
    nop
END(n5_bne_test)
